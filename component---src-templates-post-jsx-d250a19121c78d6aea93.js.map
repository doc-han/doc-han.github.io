{"version":3,"sources":["webpack:///./src/templates/post.jsx","webpack:///./src/utils/utils.js","webpack:///./data/SiteConfig.js","webpack:///./src/components/About.jsx","webpack:///./src/components/Header.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/SEO.jsx"],"names":["PostTemplate","render","_this$props","this","props","data","slug","pageContext","postNode","markdownRemark","post","frontmatter","id","date","postTags","tags","map","tag","react_default","a","createElement","gatsby_browser_entry","className","to","kebabCase_default","key","share","whatsapp","config","siteUrl","facebook","twitter","layout","Helmet_default","title","siteTitle","SEO","postPath","postSEO","class","style","display","moment","utc","format","dateFormat","href","target","gatsby_image_default","fixed","cover","childImageSharp","alt","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","headLinks","label","url","copyright","themeColor","backgroundColor","replace","substr","slice","module","exports","About","react__WEBPACK_IMPORTED_MODULE_1___default","Header","links","i","match","width","height","src","MainLayout","children","name","content","Header_Header","description","image","postURL","postMeta","excerpt","urljoin","blogURL","schemaOrgJSONLD","@context","@type","alternateName","push","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","type","JSON","stringify","property"],"mappings":"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","file":"component---src-templates-post-jsx-d250a19121c78d6aea93.js","sourcesContent":["import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql, Link } from \"gatsby\";\r\nimport { kebabCase } from 'lodash'\r\nimport Img from 'gatsby-image'\r\nimport Layout from \"../layout\";\r\nimport SEO from \"../components/SEO\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport { dateFromFormat } from '../utils/utils'\r\n\r\nexport default class PostTemplate extends React.Component {\r\n  render() {\r\n    const { data, pageContext } = this.props;\r\n    const { slug } = pageContext;\r\n    const postNode = data.markdownRemark;\r\n    const post = postNode.frontmatter;\r\n    const style = {\r\n      display: 'inline-block'\r\n    }\r\n    if (!post.id) {\r\n      post.id = slug;\r\n    }\r\n\r\n    const postTags = post.tags.map((tag)=>{\r\n      return <Link className=\"tag\" to={`/tags/${kebabCase(tag)}`} key={tag}>{tag}</Link>\r\n    })\r\n    const share = {\r\n      whatsapp: `https://wa.me/?text=${config.siteUrl}${slug}`,\r\n      facebook: `https://www.facebook.com/sharer/sharer.php?u=${config.siteUrl}${slug}`,\r\n      twitter: `https://twitter.com/intent/tweet?text=${config.siteUrl}${slug}`\r\n    }\r\n    return (\r\n      <Layout>\r\n        <div>\r\n          <Helmet>\r\n            <title>{`${post.title} - ${config.siteTitle}`}</title>\r\n          </Helmet>\r\n          <SEO postPath={slug} postNode={postNode} postSEO />\r\n          <div className=\"poster\">\r\n            <div class=\"small\">title: <b><i>{post.title}</i></b></div>\r\n            <div class=\"small\">tags: <i className=\"tags\" style={style}>{postTags}</i></div>\r\n            <div class=\"small\">date: <i>{dateFromFormat(post.date)}</i></div>\r\n            <div class=\"small\">share: <i> <a href={share.twitter} target=\"_blank\">Twitter</a>, <a href={share.facebook} target=\"_blank\">FaceBook</a>, <a href={share.whatsapp} target=\"_blank\">WhatsApp</a> </i></div>\r\n            <br/><br/>\r\n            <div className=\"cover_img\">\r\n              <Img fixed={post.cover.childImageSharp.fixed} alt=\"\"/>\r\n            </div>\r\n            <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      timeToRead\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n        cover {\r\n          childImageSharp {\r\n            fixed(width: 150, height: 150) {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n          }\r\n        }\r\n        date\r\n        tags\r\n      }\r\n      fields {\r\n        slug\r\n        date\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import moment from 'moment'\r\nimport config from '../../data/SiteConfig'\r\n\r\nconst dateFromFormat = date => moment.utc(date).format(config.dateFormat);\r\n\r\nexport { dateFromFormat }","const config = {\r\n  siteTitle: 'HanPages', // Site title.\r\n  siteTitleShort: 'Hanpages', // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\r\n  siteTitleAlt: 'Hanpages', // Alternative site title for SEO.\r\n  siteLogo: '/logos/logo-48.png', // Logo used for SEO and manifest.\r\n  siteUrl: 'https://www.hanpages.com', // Domain of your website without pathPrefix.\r\n  pathPrefix: '', // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\r\n  siteDescription: 'Han is a University Computer Science student who likes to put down his understanding of concepts and others', // Website description used for RSS feeds/meta description tag.\r\n  siteRss: '/rss.xml', // Path to the RSS file.\r\n  siteFBAppID: '', // FB Application ID for using app insights\r\n  googleAnalyticsID: '', // GA tracking ID.\r\n  disqusShortname: 'han', // Disqus shortname.\r\n  postDefaultCategoryID: 'Tech', // Default category for posts.\r\n  dateFromFormat: 'YYYY-MM-DD', // Date format used in the frontmatter.\r\n  dateFormat: 'MMMM Do, YYYY', // Date format for display.\r\n  userName: 'Han', // Username to display in the author segment.\r\n  userEmail: 'yahyafarhan48@gmail.com', // Email used for RSS feed's author segment\r\n  userTwitter: '', // Optionally renders 'Follow Me' in the UserInfo segment.\r\n  userLocation: 'Accra, Ghana', // User location to display in the author segment.\r\n  userAvatar: '', // User avatar to display in the author segment.\r\n  userDescription:\r\n    `I\\'m a second-year computer scientist and a Software Developer specializing in JavaScript and C++,\r\n    Currently doing some data science.`, // User description to display in the author segment.\r\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\r\n  headLinks: [\r\n    {\r\n      label: 'Articles',\r\n      url: '/articles',\r\n    },\r\n    {\r\n      label: 'About',\r\n      url: '/about',\r\n    },\r\n    {\r\n      label: 'Buy me a coffee',\r\n      url: 'https://ko-fi.com/han123',\r\n    }\r\n  ],\r\n  copyright: 'Copyright © 2019. Han', // Copyright string for the footer of the website and RSS feed.\r\n  themeColor: '#c62828', // Used for setting manifest and progress theme colors.\r\n  backgroundColor: '#e0e0e0' // Used for setting manifest background color.\r\n};\r\n\r\n// Validate\r\n\r\n// Make sure pathPrefix is empty if not needed\r\nif (config.pathPrefix === '/') {\r\n  config.pathPrefix = '';\r\n} else {\r\n  // Make sure pathPrefix only contains the first forward slash\r\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, '')}`;\r\n}\r\n\r\n// Make sure siteUrl doesn't have an ending forward slash\r\nif (config.siteUrl.substr(-1) === '/')\r\n  config.siteUrl = config.siteUrl.slice(0, -1);\r\n\r\n// Make sure siteRss has a starting forward slash\r\nif (config.siteRss && config.siteRss[0] !== '/')\r\n  config.siteRss = `/${config.siteRss}`;\r\n\r\nmodule.exports = config;\r\n","import React from 'react'\r\nimport config from '../../data/SiteConfig'\r\n\r\nexport default class About extends React.Component {\r\n    render(){\r\n        return (\r\n            <div class=\"author\">\r\n                <div className=\"deep bigger\">Hi, I'm {config.userName}</div>\r\n                {config.userDescription}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport config from '../../data/SiteConfig'\r\n\r\nexport default class Header extends React.Component {\r\n    render(){\r\n        const links =  config.headLinks.map(i=>{\r\n            return i.url.match('http') ? <a href={i.url}>{i.label}</a> : <Link to={i.url} key={i.label}>{i.label}</Link>\r\n        })\r\n        return (\r\n            <div id=\"header\">\r\n                <div className=\"container\">\r\n                <Link className=\"site-nameLink\" to=\"/\">\r\n                    <div className=\"site-name\">\r\n                        <img width=\"48\" height=\"48\" src={config.siteLogo} alt=\"\"/> <div>{ config.siteTitle }</div>\r\n                    </div>\r\n                </Link>\r\n                    <div>\r\n                        { links }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport SiteHeader from \"../components/Header\"\r\nimport About from \"../components/About\"\r\nimport \"../styles/styles.css\";\r\n\r\nexport default class MainLayout extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n          <meta name=\"description\" content={config.siteDescription} />\r\n        </Helmet>\r\n        <SiteHeader />\r\n        <div id=\"body\">\r\n          <div className=\"container\">\r\n            { children }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nclass SEO extends Component {\r\n  render() {\r\n    const { postNode, postPath, postSEO } = this.props;\r\n    let title;\r\n    let description;\r\n    let image;\r\n    let postURL;\r\n    if (postSEO) {\r\n      const postMeta = postNode.frontmatter;\r\n      ({ title } = postMeta);\r\n      description = postMeta.description\r\n        ? postMeta.description\r\n        : postNode.excerpt;\r\n      image = postMeta.cover.childImageSharp.fixed.src;\r\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\r\n    } else {\r\n      title = config.siteTitle;\r\n      description = config.siteDescription;\r\n      image = config.siteLogo;\r\n    }\r\n\r\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\r\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\r\n    const schemaOrgJSONLD = [\r\n      {\r\n        \"@context\": \"http://schema.org\",\r\n        \"@type\": \"WebSite\",\r\n        url: blogURL,\r\n        name: title,\r\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\r\n      }\r\n    ];\r\n    if (postSEO) {\r\n      schemaOrgJSONLD.push(\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BreadcrumbList\",\r\n          itemListElement: [\r\n            {\r\n              \"@type\": \"ListItem\",\r\n              position: 1,\r\n              item: {\r\n                \"@id\": postURL,\r\n                name: title,\r\n                image\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BlogPosting\",\r\n          url: blogURL,\r\n          name: title,\r\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\r\n          headline: title,\r\n          image: {\r\n            \"@type\": \"ImageObject\",\r\n            url: image\r\n          },\r\n          description\r\n        }\r\n      );\r\n    }\r\n    return (\r\n      <Helmet>\r\n        {/* General tags */}\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"image\" content={image} />\r\n\r\n        {/* Schema.org tags */}\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaOrgJSONLD)}\r\n        </script>\r\n\r\n        {/* OpenGraph tags */}\r\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\r\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n        <meta property=\"og:title\" content={title} />\r\n        <meta property=\"og:description\" content={description} />\r\n        <meta property=\"og:image\" content={image} />\r\n        <meta\r\n          property=\"fb:app_id\"\r\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\r\n        />\r\n\r\n        {/* Twitter Card tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta\r\n          name=\"twitter:creator\"\r\n          content={config.userTwitter ? config.userTwitter : \"\"}\r\n        />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n      </Helmet>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SEO;\r\n"],"sourceRoot":""}