{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/About.jsx","webpack:///./src/components/Header.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostListing.jsx","webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/components/SEO.jsx","webpack:///./node_modules/url-join/lib/url-join.js"],"names":["Index","render","newEdges","this","props","data","new","edges","popEdges","popular","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_SEO__WEBPACK_IMPORTED_MODULE_6__","_components_About__WEBPACK_IMPORTED_MODULE_5__","length","_components_PostListing__WEBPACK_IMPORTED_MODULE_4__","postEdges","React","Component","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","headLinks","label","url","copyright","themeColor","backgroundColor","replace","substr","slice","module","exports","About","class","Header","links","map","i","match","react_default","href","gatsby_browser_entry","to","key","id","width","height","src","alt","MainLayout","children","Helmet_default","name","content","Header_Header","PostListing","getPostList","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","date","excerpt","timeToRead","post","gatsby__WEBPACK_IMPORTED_MODULE_2__","__webpack_require__","createHTML","$export","fails","defined","quot","string","tag","attribute","value","S","String","p1","NAME","exec","O","P","F","test","toLowerCase","split","SEO","description","image","postURL","_this$props","postNode","postPath","postSEO","postMeta","cover","childImageSharp","fixed","urljoin","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","type","JSON","stringify","property","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","first","shift","component","TypeError","str","join","parts","normalize","arguments","call","undefined"],"mappings":"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","file":"component---src-pages-index-jsx-e94b09714d475e011e3f.js","sourcesContent":["import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport PostListing from \"../components/PostListing\";\r\nimport About from \"../components/About\"\r\nimport SEO from \"../components/SEO\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nclass Index extends React.Component {\r\n  render() {\r\n    const newEdges = this.props.data.new.edges;\r\n    const popEdges = this.props.data.popular.edges;\r\n    return (\r\n      <Layout>\r\n        <div className=\"index-container\">\r\n          <Helmet title={config.siteTitle} />\r\n          <SEO />\r\n          <About />\r\n          { popEdges.length> 0 ? (<div><h2>Popular</h2><PostListing postEdges={popEdges} /></div>): \"\"}\r\n          <h2>New</h2>\r\n          <PostListing postEdges={newEdges} />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query IndexQuery {\r\n    new: allMarkdownRemark(\r\n      limit: 10\r\n      sort: { fields: [fields___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n    popular: allMarkdownRemark(filter: {frontmatter: {popular: {eq: true}}}) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const config = {\r\n  siteTitle: 'HanPages', // Site title.\r\n  siteTitleShort: 'Hanpages', // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\r\n  siteTitleAlt: 'Hanpages', // Alternative site title for SEO.\r\n  siteLogo: '/logos/logo-48.png', // Logo used for SEO and manifest.\r\n  siteUrl: 'https://www.hanpages.com', // Domain of your website without pathPrefix.\r\n  pathPrefix: '', // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\r\n  siteDescription: 'Han is a University Computer Science student who likes to put down his understanding of concepts and others', // Website description used for RSS feeds/meta description tag.\r\n  siteRss: '/rss.xml', // Path to the RSS file.\r\n  siteFBAppID: '', // FB Application ID for using app insights\r\n  googleAnalyticsID: '', // GA tracking ID.\r\n  disqusShortname: 'han', // Disqus shortname.\r\n  postDefaultCategoryID: 'Tech', // Default category for posts.\r\n  dateFromFormat: 'YYYY-MM-DD', // Date format used in the frontmatter.\r\n  dateFormat: 'MMMM Do, YYYY', // Date format for display.\r\n  userName: 'Han', // Username to display in the author segment.\r\n  userEmail: 'yahyafarhan48@gmail.com', // Email used for RSS feed's author segment\r\n  userTwitter: '', // Optionally renders 'Follow Me' in the UserInfo segment.\r\n  userLocation: 'Accra, Ghana', // User location to display in the author segment.\r\n  userAvatar: '', // User avatar to display in the author segment.\r\n  userDescription:\r\n    `I\\'m a second-year computer scientist and a Software Developer specializing in JavaScript and C++,\r\n    Currently doing some data science.`, // User description to display in the author segment.\r\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\r\n  headLinks: [\r\n    {\r\n      label: 'Articles',\r\n      url: '/articles',\r\n    },\r\n    {\r\n      label: 'About',\r\n      url: '/about',\r\n    },\r\n    {\r\n      label: 'Buy me a coffee',\r\n      url: 'https://ko-fi.com/han123',\r\n    }\r\n  ],\r\n  copyright: 'Copyright © 2019. Han', // Copyright string for the footer of the website and RSS feed.\r\n  themeColor: '#c62828', // Used for setting manifest and progress theme colors.\r\n  backgroundColor: '#e0e0e0' // Used for setting manifest background color.\r\n};\r\n\r\n// Validate\r\n\r\n// Make sure pathPrefix is empty if not needed\r\nif (config.pathPrefix === '/') {\r\n  config.pathPrefix = '';\r\n} else {\r\n  // Make sure pathPrefix only contains the first forward slash\r\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, '')}`;\r\n}\r\n\r\n// Make sure siteUrl doesn't have an ending forward slash\r\nif (config.siteUrl.substr(-1) === '/')\r\n  config.siteUrl = config.siteUrl.slice(0, -1);\r\n\r\n// Make sure siteRss has a starting forward slash\r\nif (config.siteRss && config.siteRss[0] !== '/')\r\n  config.siteRss = `/${config.siteRss}`;\r\n\r\nmodule.exports = config;\r\n","import React from 'react'\r\nimport config from '../../data/SiteConfig'\r\n\r\nexport default class About extends React.Component {\r\n    render(){\r\n        return (\r\n            <div class=\"author\">\r\n                <div className=\"deep bigger\">Hi, I'm {config.userName}</div>\r\n                {config.userDescription}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport config from '../../data/SiteConfig'\r\n\r\nexport default class Header extends React.Component {\r\n    render(){\r\n        const links =  config.headLinks.map(i=>{\r\n            return i.url.match('http') ? <a href={i.url}>{i.label}</a> : <Link to={i.url} key={i.label}>{i.label}</Link>\r\n        })\r\n        return (\r\n            <div id=\"header\">\r\n                <div className=\"container\">\r\n                <Link className=\"site-nameLink\" to=\"/\">\r\n                    <div className=\"site-name\">\r\n                        <img width=\"48\" height=\"48\" src={config.siteLogo} alt=\"\"/> <div>{ config.siteTitle }</div>\r\n                    </div>\r\n                </Link>\r\n                    <div>\r\n                        { links }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport SiteHeader from \"../components/Header\"\r\nimport About from \"../components/About\"\r\nimport \"../styles/styles.css\";\r\n\r\nexport default class MainLayout extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n          <meta name=\"description\" content={config.siteDescription} />\r\n        </Helmet>\r\n        <SiteHeader />\r\n        <div id=\"body\">\r\n          <div className=\"container\">\r\n            { children }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nclass PostListing extends React.Component {\r\n  getPostList() {\r\n    const postList = [];\r\n    this.props.postEdges.forEach(postEdge => {\r\n      postList.push({\r\n        path: postEdge.node.fields.slug,\r\n        tags: postEdge.node.frontmatter.tags,\r\n        // cover: postEdge.node.frontmatter.cover,\r\n        title: postEdge.node.frontmatter.title,\r\n        date: postEdge.node.fields.date,\r\n        excerpt: postEdge.node.excerpt,\r\n        timeToRead: postEdge.node.timeToRead\r\n      });\r\n    });\r\n    return postList;\r\n  }\r\n  render() {\r\n    const postList = this.getPostList();\r\n    return (\r\n      <div>\r\n        <ul>\r\n        {/* Your post list here. */\r\n        postList.map(post => (\r\n          <li>\r\n          <Link to={post.path} key={post.title}>\r\n            {post.title}\r\n          </Link>\r\n          </li>\r\n        ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nclass SEO extends Component {\r\n  render() {\r\n    const { postNode, postPath, postSEO } = this.props;\r\n    let title;\r\n    let description;\r\n    let image;\r\n    let postURL;\r\n    if (postSEO) {\r\n      const postMeta = postNode.frontmatter;\r\n      ({ title } = postMeta);\r\n      description = postMeta.description\r\n        ? postMeta.description\r\n        : postNode.excerpt;\r\n      image = postMeta.cover.childImageSharp.fixed.src;\r\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\r\n    } else {\r\n      title = config.siteTitle;\r\n      description = config.siteDescription;\r\n      image = config.siteLogo;\r\n    }\r\n\r\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\r\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\r\n    const schemaOrgJSONLD = [\r\n      {\r\n        \"@context\": \"http://schema.org\",\r\n        \"@type\": \"WebSite\",\r\n        url: blogURL,\r\n        name: title,\r\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\r\n      }\r\n    ];\r\n    if (postSEO) {\r\n      schemaOrgJSONLD.push(\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BreadcrumbList\",\r\n          itemListElement: [\r\n            {\r\n              \"@type\": \"ListItem\",\r\n              position: 1,\r\n              item: {\r\n                \"@id\": postURL,\r\n                name: title,\r\n                image\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BlogPosting\",\r\n          url: blogURL,\r\n          name: title,\r\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\r\n          headline: title,\r\n          image: {\r\n            \"@type\": \"ImageObject\",\r\n            url: image\r\n          },\r\n          description\r\n        }\r\n      );\r\n    }\r\n    return (\r\n      <Helmet>\r\n        {/* General tags */}\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"image\" content={image} />\r\n\r\n        {/* Schema.org tags */}\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaOrgJSONLD)}\r\n        </script>\r\n\r\n        {/* OpenGraph tags */}\r\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\r\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n        <meta property=\"og:title\" content={title} />\r\n        <meta property=\"og:description\" content={description} />\r\n        <meta property=\"og:image\" content={image} />\r\n        <meta\r\n          property=\"fb:app_id\"\r\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\r\n        />\r\n\r\n        {/* Twitter Card tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta\r\n          name=\"twitter:creator\"\r\n          content={config.userTwitter ? config.userTwitter : \"\"}\r\n        />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n      </Helmet>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SEO;\r\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n"],"sourceRoot":""}