{"version":3,"sources":["webpack:///./src/pages/articles.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/About.jsx","webpack:///./src/components/Header.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostListing.jsx"],"names":["Articles","props","_this","_React$Component","call","this","tagClick","ev","elem","target","classList","contains","remove","newTags","state","activeTags","delete","innerText","split","join","setState","add","filterPosts","handleChange","value","searchTerm","filtered","posts","filter","post","lodash_intersection__WEBPACK_IMPORTED_MODULE_13___default","Array","from","node","frontmatter","tags","title","toLowerCase","includes","filteredPosts","data","group","Set","all","edges","render","_this2","tagList","map","i","react__WEBPACK_IMPORTED_MODULE_15___default","a","createElement","onClick","className","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_14___default","fieldValue","_layout__WEBPACK_IMPORTED_MODULE_18__","react_helmet__WEBPACK_IMPORTED_MODULE_19___default","config","siteTitle","onChange","_ref","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","abrupt","sent","stop","_x","apply","arguments","class","type","placeholder","length","_components_PostListing__WEBPACK_IMPORTED_MODULE_17__","postEdges","React","Component","query","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","headLinks","label","url","copyright","themeColor","backgroundColor","replace","substr","slice","module","exports","About","react__WEBPACK_IMPORTED_MODULE_1___default","Header","links","match","react_default","href","gatsby_browser_entry","to","key","id","width","height","src","alt","MainLayout","children","Helmet_default","name","content","Header_Header","PostListing","getPostList","postList","forEach","postEdge","push","path","fields","slug","date","excerpt","timeToRead","gatsby__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-pages-articles-jsx-76221e176d78066f81d9.js","sourcesContent":["import React from 'react'\r\nimport { graphql, Link } from 'gatsby'\r\nimport _, {kebabCase} from 'lodash'\r\nimport PostListing from '../components/PostListing'\r\nimport Layout from '../layout'\r\nimport Helmet from 'react-helmet'\r\nimport config from '../../data/SiteConfig'\r\n\r\nexport default class Articles extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            tags: props.data.tags.group,\r\n            activeTags: new Set(),\r\n            posts: props.data.all.edges,\r\n            filteredPosts: props.data.all.edges,\r\n            searchTerm: ''\r\n        }\r\n        this.filterPosts();\r\n    }\r\n    tagClick = (ev)=>{\r\n      let elem = ev.target;\r\n        if(elem.classList.contains(\"active\")){\r\n          //turn it off\r\n          elem.classList.remove(\"active\")\r\n          const newTags = this.state.activeTags;\r\n          newTags.delete(elem.innerText.split(\"-\").join(\" \"));\r\n          this.setState({activeTags: newTags})\r\n        }else{\r\n          //turn it on\r\n          elem.classList.add(\"active\")\r\n          const newTags = this.state.activeTags;\r\n          newTags.add(elem.innerText.split(\"-\").join(\" \"));\r\n          this.setState({activeTags: newTags})\r\n        }\r\n        this.filterPosts();\r\n    }\r\n    handleChange = (ev) => {\r\n      let {value} = ev.target;\r\n      this.setState({searchTerm: value})\r\n      this.filterPosts()\r\n    }\r\n    filterPosts = () => {\r\n      const filtered = this.state.posts.filter(post=>{\r\n        if(_.intersection(Array.from(this.state.activeTags), post.node.frontmatter.tags) == false ||\r\n        !post.node.frontmatter.title.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\r\n          return false;\r\n        return true;\r\n      })\r\n      this.setState({filteredPosts: filtered})\r\n    }\r\n    render(){\r\n        let {filteredPosts} = this.state;\r\n        const tagList = this.state.tags.map(i=>{\r\n            return <span onClick={(ev)=> this.tagClick(ev)} className=\"tag small\">{kebabCase(i.fieldValue)}</span>\r\n        });\r\n        return (\r\n        <Layout>\r\n          <Helmet title={`Articles - ${config.siteTitle}`} />\r\n        <h2>Tags</h2>\r\n        <div className=\"tags\">{ tagList }</div>\r\n        <br />\r\n        <input onChange={async (ev)=> await this.handleChange(ev)} class=\"search\" value={this.state.searchTerm} type=\"text\" placeholder=\"Search for article\" />\r\n        <h3>{this.state.filteredPosts.length} Posts available</h3>\r\n        <PostListing postEdges={filteredPosts} />\r\n        </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport const query = graphql`\r\n    query articlesQuery {\r\n        all: allMarkdownRemark(\r\n            sort: { fields: [fields___date], order: DESC }\r\n          ) {\r\n            edges {\r\n              node {\r\n                fields {\r\n                  slug\r\n                  date\r\n                }\r\n                excerpt\r\n                timeToRead\r\n                frontmatter {\r\n                  title\r\n                  tags\r\n                  date\r\n                }\r\n              }\r\n            }\r\n        }\r\n        tags:allMarkdownRemark {\r\n            group(field: frontmatter___tags) {\r\n              fieldValue\r\n              totalCount\r\n            }\r\n          }\r\n    }\r\n`;","const config = {\r\n  siteTitle: 'HanPages', // Site title.\r\n  siteTitleShort: 'Hanpages', // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\r\n  siteTitleAlt: 'Hanpages', // Alternative site title for SEO.\r\n  siteLogo: '/logos/logo-48.png', // Logo used for SEO and manifest.\r\n  siteUrl: 'https://www.hanpages.com', // Domain of your website without pathPrefix.\r\n  pathPrefix: '', // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\r\n  siteDescription: 'Han is a University Computer Science student who likes to put down his understanding of concepts and others', // Website description used for RSS feeds/meta description tag.\r\n  siteRss: '/rss.xml', // Path to the RSS file.\r\n  siteFBAppID: '', // FB Application ID for using app insights\r\n  googleAnalyticsID: '', // GA tracking ID.\r\n  disqusShortname: 'han', // Disqus shortname.\r\n  postDefaultCategoryID: 'Tech', // Default category for posts.\r\n  dateFromFormat: 'YYYY-MM-DD', // Date format used in the frontmatter.\r\n  dateFormat: 'MMMM Do, YYYY', // Date format for display.\r\n  userName: 'Han', // Username to display in the author segment.\r\n  userEmail: 'yahyafarhan48@gmail.com', // Email used for RSS feed's author segment\r\n  userTwitter: '', // Optionally renders 'Follow Me' in the UserInfo segment.\r\n  userLocation: 'Accra, Ghana', // User location to display in the author segment.\r\n  userAvatar: '', // User avatar to display in the author segment.\r\n  userDescription:\r\n    `I\\'m a second-year computer scientist and a Software Developer specializing in JavaScript and C++,\r\n    Currently doing some data science.`, // User description to display in the author segment.\r\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\r\n  headLinks: [\r\n    {\r\n      label: 'Articles',\r\n      url: '/articles',\r\n    },\r\n    {\r\n      label: 'About',\r\n      url: '/about',\r\n    },\r\n    {\r\n      label: 'Buy me a coffee',\r\n      url: 'https://ko-fi.com/han123',\r\n    }\r\n  ],\r\n  copyright: 'Copyright © 2019. Han', // Copyright string for the footer of the website and RSS feed.\r\n  themeColor: '#c62828', // Used for setting manifest and progress theme colors.\r\n  backgroundColor: '#e0e0e0' // Used for setting manifest background color.\r\n};\r\n\r\n// Validate\r\n\r\n// Make sure pathPrefix is empty if not needed\r\nif (config.pathPrefix === '/') {\r\n  config.pathPrefix = '';\r\n} else {\r\n  // Make sure pathPrefix only contains the first forward slash\r\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, '')}`;\r\n}\r\n\r\n// Make sure siteUrl doesn't have an ending forward slash\r\nif (config.siteUrl.substr(-1) === '/')\r\n  config.siteUrl = config.siteUrl.slice(0, -1);\r\n\r\n// Make sure siteRss has a starting forward slash\r\nif (config.siteRss && config.siteRss[0] !== '/')\r\n  config.siteRss = `/${config.siteRss}`;\r\n\r\nmodule.exports = config;\r\n","import React from 'react'\r\nimport config from '../../data/SiteConfig'\r\n\r\nexport default class About extends React.Component {\r\n    render(){\r\n        return (\r\n            <div class=\"author\">\r\n                <div className=\"deep bigger\">Hi, I'm {config.userName}</div>\r\n                {config.userDescription}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport config from '../../data/SiteConfig'\r\n\r\nexport default class Header extends React.Component {\r\n    render(){\r\n        const links =  config.headLinks.map(i=>{\r\n            return i.url.match('http') ? <a href={i.url}>{i.label}</a> : <Link to={i.url} key={i.label}>{i.label}</Link>\r\n        })\r\n        return (\r\n            <div id=\"header\">\r\n                <div className=\"container\">\r\n                <Link className=\"site-nameLink\" to=\"/\">\r\n                    <div className=\"site-name\">\r\n                        <img width=\"48\" height=\"48\" src={config.siteLogo} alt=\"\"/> <div>{ config.siteTitle }</div>\r\n                    </div>\r\n                </Link>\r\n                    <div>\r\n                        { links }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport SiteHeader from \"../components/Header\"\r\nimport About from \"../components/About\"\r\nimport \"../styles/styles.css\";\r\n\r\nexport default class MainLayout extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n          <meta name=\"description\" content={config.siteDescription} />\r\n        </Helmet>\r\n        <SiteHeader />\r\n        <div id=\"body\">\r\n          <div className=\"container\">\r\n            { children }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nclass PostListing extends React.Component {\r\n  getPostList() {\r\n    const postList = [];\r\n    this.props.postEdges.forEach(postEdge => {\r\n      postList.push({\r\n        path: postEdge.node.fields.slug,\r\n        tags: postEdge.node.frontmatter.tags,\r\n        // cover: postEdge.node.frontmatter.cover,\r\n        title: postEdge.node.frontmatter.title,\r\n        date: postEdge.node.fields.date,\r\n        excerpt: postEdge.node.excerpt,\r\n        timeToRead: postEdge.node.timeToRead\r\n      });\r\n    });\r\n    return postList;\r\n  }\r\n  render() {\r\n    const postList = this.getPostList();\r\n    return (\r\n      <div>\r\n        <ul>\r\n        {/* Your post list here. */\r\n        postList.map(post => (\r\n          <li>\r\n          <Link to={post.path} key={post.title}>\r\n            {post.title}\r\n          </Link>\r\n          </li>\r\n        ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n"],"sourceRoot":""}